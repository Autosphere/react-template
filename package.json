{
  "name": "react-template",
  "version": "3.4.0",
  "private": true,
  "description": "",
  "main": "build/server",
  "engines": {
    "node": ">=6.4.x <7",
    "npm": ">=3.10.x <4",
    "yarn": "0.23.2"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tribou/react-template.git"
  },
  "author": "tribou",
  "license": "Apache-2.0",
  "homepage": "https://github.com/tribou/react-template#readme",
  "devDependencies": {
    "@types/enzyme": "^2.7.9",
    "@types/jest": "^19.2.2",
    "@types/node": "^7.0.12",
    "@types/react": "^15.0.21",
    "@types/react-dom": "^0.14.23",
    "@types/react-helmet": "^5.0.1",
    "@types/react-redux": "^4.4.39",
    "@types/react-router": "^4.0.4",
    "assets-webpack-plugin": "^3.4.0",
    "autoprefixer": "^6.4.0",
    "awesome-typescript-loader": "^3.1.2",
    "babel-cli": "^6.14.0",
    "babel-core": "^6.18.2",
    "babel-jest": "^19.0.0",
    "babel-loader": "^6.2.5",
    "babel-plugin-transform-class-properties": "^6.11.5",
    "babel-plugin-transform-object-assign": "^6.8.0",
    "babel-preset-latest": "^6.24.0",
    "babel-preset-react": "^6.11.1",
    "babel-preset-stage-3": "^6.11.0",
    "babel-register": "^6.11.6",
    "browser-sync": "^2.14.0",
    "browser-sync-webpack-plugin": "^1.1.2",
    "compression-webpack-plugin": "^0.4.0",
    "concurrently": "^3.1.0",
    "copy-webpack-plugin": "^4.0.1",
    "cross-env": "^4.0.0",
    "css-loader": "^0.28.0",
    "css-modules-require-hook": "^4.0.2",
    "enzyme": "^2.4.1",
    "enzyme-to-json": "^1.4.5",
    "extract-text-webpack-plugin": "^2.1.0",
    "favicons-webpack-plugin": "0.0.7",
    "file-loader": "^0.11.1",
    "flow-bin": "^0.44.0",
    "glob": "^7.0.5",
    "identity-obj-proxy": "^3.0.0",
    "imageoptim-cli": "^1.14.8",
    "jest": "^19.0.2",
    "json-loader": "^0.5.4",
    "nodemon": "^1.10.2",
    "offline-plugin": "^4.5.2",
    "postcss-calc": "^5.3.1",
    "postcss-loader": "^1.3.3",
    "precss": "^1.4.0",
    "react-addons-perf": "^15.4.1",
    "react-test-renderer": "^15.5.4",
    "rimraf": "^2.5.4",
    "tslint": "^5.1.0",
    "tslint-config-tribou": "0.0.3",
    "typescript": "^2.2.2",
    "url-loader": "^0.5.7",
    "webpack": "^2.2.1",
    "webpack-node-externals": "^1.3.3"
  },
  "dependencies": {
    "axios": "^0.15.3",
    "babel-polyfill": "^6.16.0",
    "boom": "^4.2.0",
    "classnames": "^2.2.5",
    "cookies-js": "^1.2.3",
    "debug": "^2.2.0",
    "good": "^7.0.1",
    "good-console": "^6.4.0",
    "good-squeeze": "^5.0.1",
    "hapi": "^16.0.0",
    "hapi-react-views": "^9.1.1",
    "immutable": "^3.8.1",
    "inert": "^4.0.2",
    "js-base64": "^2.1.9",
    "react": "^15.3.1",
    "react-dom": "^15.3.1",
    "react-helmet": "^5.0.1",
    "react-redux": "^5.0.1",
    "react-router": "^3.0.0",
    "react-router-redux": "^4.0.7",
    "redux": "^3.5.2",
    "redux-devtools-extension": "^2.13.0",
    "redux-form": "^6.6.0",
    "redux-logger": "^3.0.0",
    "redux-observable": "^0.14.1",
    "redux-promise-middleware": "^4.2.0",
    "redux-thunk": "^2.1.0",
    "reselect": "^3.0.0",
    "rollbar-browser": "^1.9.2",
    "rxjs": "^5.0.2",
    "sanitize.css": "^5.0.0",
    "source-map-support": "^0.4.2",
    "transit-immutable-js": "^0.7.0",
    "transit-js": "^0.8.846",
    "vision": "^4.1.0"
  },
  "jest": {
    "verbose": true,
    "testRegex": "/(src|server)/.*_test\\.tsx?$",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
      "\\.(css)$": "identity-obj-proxy"
    },
    "moduleDirectories": [
      "node_modules",
      "<rootDir>"
    ],
    "snapshotSerializers": [
      "enzyme-to-json/serializer"
    ]
  },
  "scripts": {
    "heroku-postbuild": "npm run build",
    "init": "heroku git:remote -a my-app -r prod && heroku git:remote -a my-app-staging -r staging",
    "optimize": "imageOptim -d static/images",
    "preversion": "IMAGE_FILES=$(git diff --name-only $(git describe --abbrev=0 --tags)..HEAD static/images/); if [ $(echo \"$IMAGE_FILES\" | grep . | wc -l) -ne 0 ]; then echo \"$IMAGE_FILES\" | imageOptim; git add --all static/images; fi",
    "upgrade-deps": "npm run yarn-bin -- cache clean && rm -rf node_modules .npm-packages-offline-cache flow-typed && rm yarn.lock && npm run yarn && flow-typed install && cat yarn.lock | grep registry",
    "start": "node build/server",
    "start-prod": "time npm run --silent build && date && cross-env NODE_ENV=production npm start",
    "build": "rimraf build && cross-env NODE_ENV=production webpack",
    "deploy-prod": "heroku pipelines:promote -a my-app-staging",
    "lsp": "heroku releases -a my-app",
    "lss": "heroku releases -a my-app-staging",
    "dev": "npm run yarn && concurrently -n 'APP,FLOW' -p '[{name}]' 'cross-env DEBUG=my-app* DEBUG_COLORS=true NODE_ENV=development nodemon -x node server/dev.index.ts' 'npm run --silent watch-flow'",
    "flow": "flow; test $? -eq 0 -o $? -eq 2",
    "flow-ci": "flow check .",
    "lint": "tslint -c tslint.json '*(config|server|src)/**/*.ts?'; test $? -eq 0 -o $? -eq 2",
    "lint-type": "tslint --type-check --project tsconfig.json -c tslint.json '*(config|server|src)/**/*.ts?'",
    "test": "concurrently -n 'LINT,FLOW' -p '[{name}]' 'npm run lint' 'flow' && npm run --silent test-jest",
    "test-jest": "cross-env NODE_ENV=test jest --coverage",
    "watch": "nodemon -x npm run --silent test",
    "watch-flow": "nodemon -w . -i .eslintcache -i build -x npm run --silent flow",
    "watch-lint": "nodemon -w . -x npm run --silent lint",
    "watch-test": "nodemon -w . -i '~*' -x npm run --silent test-jest",
    "yarn": "npm run --silent yarn-bin -- install --ignore-scripts",
    "yarn-bin": "node bin/yarn-${npm_package_engines_yarn}.js"
  }
}
